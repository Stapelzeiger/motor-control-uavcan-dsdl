#
# This is usually the first command that is sent to the motor controller.
# All other commands except Get ID are ignored until this command is sent.
#

float16 position_ctrl_p_gain
float16 position_ctrl_d_gain
float16 speed_ctrl_p_gain
float16 speed_ctrl_i_gain
float16 speed_ctrl_d_gain
float16 current_ctrl_p_gain
float16 current_ctrl_i_gain
float16 current_ctrl_d_gain      # (needed?)

float16 position_ctrl_loop_frequency     # [hz]
float16 speed_ctrl_loop_frequency        # [hz]
float16 current_ctrl_loop_frequency      # [hz]

float16 thermal_capacity        # [j/k]
float16 thermal_resistance      # (to ambient which is assumed 25degc) [k/w]
float16 thermal_current_gain    # (coil_resistance) [ohm = w/a^2]
float16 max_temperature         # [degc]

float16 torque_constant         # (of motor without transmission) [nm/a]
float16 torque_limit            # [nm]
float16 speed_limit             # [rad/s]

uint16 motor_encoder_steps_per_revolution   # (0=NA)
float16 transmission_ratio                  # (output/motor)
uint16 second_encoder_steps_per_revolution  # (0=NA)

float16 potentiometer_min       # [0...1]
float16 potentiometer_max       # [0...1]

uint2 GPIO1_function        # (0: unused, 1: encoder A, 2: positive stop, 3: zero reference)
uint2 GPIO2_function        # (0: unused, 1: encoder B, 2: negative stop)
uint2 GPIOA_function        # (0: unused, 1: potentiometer, 2: positive stop, 3: zero reference)
bool enable_ABS             # Anti-lock Braking System
 
---
 
# Reply

int8[<=128] error_message       # (length of 0 for no error)
